#include <iostream>

static int nA = 20; //Глобальні статичні змінні
static int nB;

int main() {
	nB = 10;
	{
		static int nC = 4; //Локальна статична змінна
		int nE;
		nE = nA * 15;
		nE = ::nA * 15; //Операція глобального дозволу видимості
		nC = nE + nB;
	}
	//nC - локальна змінна, недоступна поза блоком
	nA += 10;
	nB++;

	float fltG = 20; //Динаиічний розподів в пам'яті стеку
	int nH = 0; //Динаиічний розподів в пам'яті стеку
	for (int i = 0; i < 5; i++)
	{
		static int nF = 0;
		nF++;
		int nJ = 0; //Динаиічний розподіл в пам'яті стеку
		nJ++;
		nH++;
	}

	char cA = '!';
	{
		char cA = '&';
		int nK = 1;
		{
			char cA = '@';
			int nK = 2;
			int nM = 6;
		}
		nK += 5; //nK стане 6
	}
	//сА залишиться '!'

	for (int i = 0; i < 5; i++)
	{
		static int iA = 0;
		int iB = 0;
		iA = iA + 1;
		iB = iB + 1;
	}
	//Статична змінна накопичує значення через те, що вона ініціалізується лише один раз під час компіляції

	//Heap
	int* p1; //Опис вказівки
	p1 = new int; //Захоплення пам'яті в купі
	*p1 = 25; //Занесення в купу значення змінної
	delete p1; //Звільнення пам'яті

	int* p2; //Опис вказівки
	p2 = new int; //Захоплення пам'яті в купі
	*p2 = 100; //Занесення в купу значення змінної
	p2 = p1; //Губимо зв'язок з областю, де знаходиться 100
	delete p2; //Звільнення пам'яті
}